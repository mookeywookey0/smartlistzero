{"ast":null,"code":"var _jsxFileName = \"/Users/joeyahern/slz-app/frontend/src/components/DailyLogTable.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { CSVLink } from 'react-csv';\nimport { Line } from 'react-chartjs-2';\nimport { DndProvider, useDrag, useDrop } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport Modal from 'react-modal';\nimport 'chart.js/auto';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport '../App.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:3000';\nconst USER_ID = '123'; // Replace with actual user ID\n\nconst ItemType = {\n  COLUMN: 'COLUMN'\n};\nconst DraggableColumn = ({\n  id,\n  children,\n  moveColumn,\n  findColumn,\n  frozen\n}) => {\n  _s();\n  const originalIndex = findColumn(id).index;\n  const [{\n    isDragging\n  }, ref] = useDrag({\n    type: ItemType.COLUMN,\n    item: {\n      id,\n      originalIndex\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    }),\n    end: (item, monitor) => {\n      const {\n        id: droppedId,\n        originalIndex\n      } = item;\n      const didDrop = monitor.didDrop();\n      if (!didDrop) {\n        moveColumn(droppedId, originalIndex);\n      }\n    }\n  }, [id, originalIndex, moveColumn, findColumn]);\n  const [, drop] = useDrop({\n    accept: ItemType.COLUMN,\n    hover({\n      id: draggedId\n    }) {\n      if (draggedId !== id) {\n        const {\n          index: overIndex\n        } = findColumn(id);\n        moveColumn(draggedId, overIndex);\n      }\n    }\n  }, [id, findColumn, moveColumn]);\n  const opacity = isDragging ? 0 : 1;\n  const refCallback = node => {\n    if (!frozen) {\n      ref(drop(node));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"th\", {\n    ref: refCallback,\n    style: {\n      opacity\n    },\n    className: \"column\",\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(DraggableColumn, \"K5ikLY5xRxGerO/MxqEDI4MjslI=\", false, function () {\n  return [useDrag, useDrop];\n});\n_c = DraggableColumn;\nconst DailyLogTable = () => {\n  _s2();\n  const [dailyLogs, setDailyLogs] = useState([]);\n  const [smartListMap, setSmartListMap] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [columns, setColumns] = useState([]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  useEffect(() => {\n    Modal.setAppElement('#root'); // Set the app element for accessibility\n\n    const fetchDailyLogs = async () => {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/api/daily-logs`);\n        setDailyLogs(response.data);\n      } catch (error) {\n        console.error('Error fetching daily logs:', error);\n      }\n    };\n    const fetchSmartLists = async () => {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/api/smartlists`);\n        setSmartListMap(response.data);\n      } catch (error) {\n        console.error('Error fetching smart lists:', error);\n      }\n    };\n    const fetchColumnOrder = async () => {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/api/get-column-order/${USER_ID}`);\n        if (Array.isArray(response.data) && response.data.length > 0) {\n          setColumns(prevColumns => {\n            const orderedColumns = response.data.map(id => prevColumns.find(col => col.id === id));\n            return orderedColumns.filter(Boolean);\n          });\n        }\n      } catch (error) {\n        console.error('Error fetching column order:', error);\n      }\n    };\n    const fetchData = async () => {\n      await fetchDailyLogs();\n      await fetchSmartLists();\n      await fetchColumnOrder();\n      setLoading(false);\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (dailyLogs.length > 0) {\n      setColumns([{\n        id: 'date',\n        label: 'Date',\n        isFrozen: true\n      }, {\n        id: 'agentName',\n        label: \"Agent's Name\",\n        isFrozen: true\n      }, ...Object.keys(dailyLogs[0].smartListCounts).map(smartListId => ({\n        id: smartListId,\n        label: smartListMap[smartListId]\n      })), {\n        id: 'total',\n        label: 'Total',\n        isFrozen: true\n      }]);\n    }\n  }, [dailyLogs, smartListMap]);\n  const moveColumn = useCallback((draggedId, overIndex) => {\n    const draggedIndex = columns.findIndex(col => col.id === draggedId);\n    const newColumns = [...columns];\n    const [movedColumn] = newColumns.splice(draggedIndex, 1);\n    newColumns.splice(overIndex, 0, movedColumn);\n    setColumns(newColumns);\n    saveColumnOrder(newColumns);\n  }, [columns]);\n  const findColumn = useCallback(id => {\n    const column = columns.find(col => col.id === id);\n    return {\n      column,\n      index: columns.indexOf(column)\n    };\n  }, [columns]);\n  const saveColumnOrder = async newColumns => {\n    try {\n      const order = newColumns.map(col => col.id);\n      await axios.post(`${API_BASE_URL}/api/save-column-order`, {\n        userId: USER_ID,\n        order\n      });\n    } catch (error) {\n      console.error('Error saving column order:', error);\n    }\n  };\n  const openModal = () => setModalIsOpen(true);\n  const closeModal = () => setModalIsOpen(false);\n  const handleClearLogs = async () => {\n    closeModal();\n    try {\n      await axios.delete(`${API_BASE_URL}/api/daily-logs`);\n      setDailyLogs([]);\n    } catch (error) {\n      console.error('Error clearing daily logs:', error);\n    }\n  };\n  const handleDateChange = useCallback(async () => {\n    if (!startDate || !endDate) {\n      return;\n    }\n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/daily-logs`, {\n        params: {\n          startDate: startDate.toISOString(),\n          endDate: endDate.toISOString()\n        }\n      });\n      setDailyLogs(response.data);\n    } catch (error) {\n      console.error('Error fetching logs with date range:', error);\n    }\n  }, [startDate, endDate]);\n  useEffect(() => {\n    handleDateChange();\n  }, [startDate, endDate, handleDateChange]);\n  const handleSearchChange = event => {\n    setSearchQuery(event.target.value);\n  };\n  const filteredLogs = dailyLogs.filter(log => log.agentName.toLowerCase().includes(searchQuery.toLowerCase()));\n  const groupedData = filteredLogs.reduce((acc, log) => {\n    const date = new Date(log.date).toLocaleDateString();\n    if (!acc[log.agentName]) {\n      acc[log.agentName] = {\n        dates: [],\n        totals: []\n      };\n    }\n    acc[log.agentName].dates.push(date);\n    acc[log.agentName].totals.push(log.total);\n    return acc;\n  }, {});\n  const colors = ['rgba(75, 192, 192, 0.6)', 'rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)', 'rgba(255, 206, 86, 0.6)', 'rgba(75, 192, 192, 1)'];\n  const data = {\n    labels: [...new Set(filteredLogs.map(log => new Date(log.date).toLocaleDateString()))].reverse(),\n    datasets: Object.entries(groupedData).map(([agentName, {\n      dates,\n      totals\n    }], index) => ({\n      label: agentName,\n      data: totals.reverse(),\n      backgroundColor: colors[index % colors.length],\n      borderColor: colors[index % colors.length].replace('0.6', '1'),\n      borderWidth: 1,\n      fill: false\n    }))\n  };\n  return /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"heading\",\n        children: \"Daily Log\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-indicator\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: openModal,\n            className: \"clear-button\",\n            children: \"Clear Daily Logs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CSVLink, {\n            data: filteredLogs.map(log => ({\n              date: new Date(log.date).toLocaleDateString(),\n              agentName: log.agentName,\n              ...log.smartListCounts,\n              total: log.total\n            })),\n            filename: \"daily_logs.csv\",\n            className: \"csv-button\",\n            children: \"Export CSV\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date-picker-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date-picker-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Start Date: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n              selected: startDate,\n              onChange: date => setStartDate(date),\n              selectsStart: true,\n              startDate: startDate,\n              endDate: endDate,\n              isClearable: true,\n              className: \"date-picker\",\n              placeholderText: \"Select start date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date-picker-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"End Date: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n              selected: endDate,\n              onChange: date => setEndDate(date),\n              selectsEnd: true,\n              startDate: startDate,\n              endDate: endDate,\n              minDate: startDate,\n              isClearable: true,\n              className: \"date-picker\",\n              placeholderText: \"Select end date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search agents...\",\n          value: searchQuery,\n          onChange: handleSearchChange,\n          className: \"search-input p-2 border border-gray-300 rounded mb-4 w-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: /*#__PURE__*/_jsxDEV(Line, {\n            data: data,\n            options: {\n              maintainAspectRatio: false\n            },\n            height: 400\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-container\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: columns.map(column => /*#__PURE__*/_jsxDEV(DraggableColumn, {\n                  id: column.id,\n                  moveColumn: moveColumn,\n                  findColumn: findColumn,\n                  frozen: ['date', 'agentName', 'total'].includes(column.id),\n                  children: column.label\n                }, column.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: filteredLogs.map(log => /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"border-b border-gray-200 hover:bg-gray-100 transition duration-300\",\n                children: columns.map(column => /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"py-4 px-6 text-center text-sm\",\n                  children: column.id === 'date' ? new Date(log.date).toLocaleDateString() : column.id === 'agentName' ? log.agentName : column.id === 'total' ? log.total : log.smartListCounts[column.id]\n                }, `${log._id}-${column.id}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 25\n                }, this))\n              }, log._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: modalIsOpen,\n        onRequestClose: closeModal,\n        className: \"modal-content\",\n        overlayClassName: \"modal-overlay\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"modal-header\",\n          children: \"Confirm Clear Logs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Are you sure you want to clear the daily logs? This action cannot be undone.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeModal,\n            className: \"px-4 py-2 bg-gray-300 text-gray-700 rounded-lg hover:bg-gray-400 transition duration-300\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleClearLogs,\n            className: \"px-4 py-2 bg-red-500 text-white rounded-lg hover:bg-red-600 transition duration-300\",\n            children: \"Clear Logs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 5\n  }, this);\n};\n_s2(DailyLogTable, \"vfJrV/iFr/JbWyO3wBpDYJs9OBA=\");\n_c2 = DailyLogTable;\nexport default DailyLogTable;\nvar _c, _c2;\n$RefreshReg$(_c, \"DraggableColumn\");\n$RefreshReg$(_c2, \"DailyLogTable\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","CSVLink","Line","DndProvider","useDrag","useDrop","HTML5Backend","Modal","DatePicker","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","USER_ID","ItemType","COLUMN","DraggableColumn","id","children","moveColumn","findColumn","frozen","_s","originalIndex","index","isDragging","ref","type","item","collect","monitor","end","droppedId","didDrop","drop","accept","hover","draggedId","overIndex","opacity","refCallback","node","style","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","DailyLogTable","_s2","dailyLogs","setDailyLogs","smartListMap","setSmartListMap","loading","setLoading","columns","setColumns","modalIsOpen","setModalIsOpen","startDate","setStartDate","endDate","setEndDate","searchQuery","setSearchQuery","setAppElement","fetchDailyLogs","response","get","data","error","console","fetchSmartLists","fetchColumnOrder","Array","isArray","length","prevColumns","orderedColumns","map","find","col","filter","Boolean","fetchData","label","isFrozen","Object","keys","smartListCounts","smartListId","draggedIndex","findIndex","newColumns","movedColumn","splice","saveColumnOrder","column","indexOf","order","post","userId","openModal","closeModal","handleClearLogs","delete","handleDateChange","params","toISOString","handleSearchChange","event","target","value","filteredLogs","log","agentName","toLowerCase","includes","groupedData","reduce","acc","date","Date","toLocaleDateString","dates","totals","push","total","colors","labels","Set","reverse","datasets","entries","backgroundColor","borderColor","replace","borderWidth","fill","backend","onClick","filename","selected","onChange","selectsStart","isClearable","placeholderText","selectsEnd","minDate","placeholder","options","maintainAspectRatio","height","_id","isOpen","onRequestClose","overlayClassName","_c2","$RefreshReg$"],"sources":["/Users/joeyahern/slz-app/frontend/src/components/DailyLogTable.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { CSVLink } from 'react-csv';\nimport { Line } from 'react-chartjs-2';\nimport { DndProvider, useDrag, useDrop } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport Modal from 'react-modal';\nimport 'chart.js/auto';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport '../App.css'; // Import the CSS file\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:3000';\nconst USER_ID = '123'; // Replace with actual user ID\n\nconst ItemType = {\n  COLUMN: 'COLUMN',\n};\n\nconst DraggableColumn = ({ id, children, moveColumn, findColumn, frozen }) => {\n  const originalIndex = findColumn(id).index;\n  const [{ isDragging }, ref] = useDrag({\n    type: ItemType.COLUMN,\n    item: { id, originalIndex },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n    end: (item, monitor) => {\n      const { id: droppedId, originalIndex } = item;\n      const didDrop = monitor.didDrop();\n      if (!didDrop) {\n        moveColumn(droppedId, originalIndex);\n      }\n    },\n  }, [id, originalIndex, moveColumn, findColumn]);\n\n  const [, drop] = useDrop({\n    accept: ItemType.COLUMN,\n    hover({ id: draggedId }) {\n      if (draggedId !== id) {\n        const { index: overIndex } = findColumn(id);\n        moveColumn(draggedId, overIndex);\n      }\n    },\n  }, [id, findColumn, moveColumn]);\n\n  const opacity = isDragging ? 0 : 1;\n  const refCallback = (node) => {\n    if (!frozen) {\n      ref(drop(node));\n    }\n  };\n\n  return (\n    <th ref={refCallback} style={{ opacity }} className=\"column\">\n      {children}\n    </th>\n  );\n};\n\nconst DailyLogTable = () => {\n  const [dailyLogs, setDailyLogs] = useState([]);\n  const [smartListMap, setSmartListMap] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [columns, setColumns] = useState([]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  useEffect(() => {\n    Modal.setAppElement('#root'); // Set the app element for accessibility\n\n    const fetchDailyLogs = async () => {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/api/daily-logs`);\n        setDailyLogs(response.data);\n      } catch (error) {\n        console.error('Error fetching daily logs:', error);\n      }\n    };\n\n    const fetchSmartLists = async () => {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/api/smartlists`);\n        setSmartListMap(response.data);\n      } catch (error) {\n        console.error('Error fetching smart lists:', error);\n      }\n    };\n\n    const fetchColumnOrder = async () => {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/api/get-column-order/${USER_ID}`);\n        if (Array.isArray(response.data) && response.data.length > 0) {\n          setColumns((prevColumns) => {\n            const orderedColumns = response.data.map((id) => prevColumns.find((col) => col.id === id));\n            return orderedColumns.filter(Boolean);\n          });\n        }\n      } catch (error) {\n        console.error('Error fetching column order:', error);\n      }\n    };\n\n    const fetchData = async () => {\n      await fetchDailyLogs();\n      await fetchSmartLists();\n      await fetchColumnOrder();\n      setLoading(false);\n    };\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    if (dailyLogs.length > 0) {\n      setColumns([\n        { id: 'date', label: 'Date', isFrozen: true },\n        { id: 'agentName', label: \"Agent's Name\", isFrozen: true },\n        ...Object.keys(dailyLogs[0].smartListCounts).map((smartListId) => ({\n          id: smartListId,\n          label: smartListMap[smartListId],\n        })),\n        { id: 'total', label: 'Total', isFrozen: true },\n      ]);\n    }\n  }, [dailyLogs, smartListMap]);\n\n  const moveColumn = useCallback((draggedId, overIndex) => {\n    const draggedIndex = columns.findIndex((col) => col.id === draggedId);\n    const newColumns = [...columns];\n    const [movedColumn] = newColumns.splice(draggedIndex, 1);\n    newColumns.splice(overIndex, 0, movedColumn);\n    setColumns(newColumns);\n    saveColumnOrder(newColumns);\n  }, [columns]);\n\n  const findColumn = useCallback((id) => {\n    const column = columns.find((col) => col.id === id);\n    return {\n      column,\n      index: columns.indexOf(column),\n    };\n  }, [columns]);\n\n  const saveColumnOrder = async (newColumns) => {\n    try {\n      const order = newColumns.map((col) => col.id);\n      await axios.post(`${API_BASE_URL}/api/save-column-order`, { userId: USER_ID, order });\n    } catch (error) {\n      console.error('Error saving column order:', error);\n    }\n  };\n\n  const openModal = () => setModalIsOpen(true);\n  const closeModal = () => setModalIsOpen(false);\n\n  const handleClearLogs = async () => {\n    closeModal();\n    try {\n      await axios.delete(`${API_BASE_URL}/api/daily-logs`);\n      setDailyLogs([]);\n    } catch (error) {\n      console.error('Error clearing daily logs:', error);\n    }\n  };\n\n  const handleDateChange = useCallback(async () => {\n    if (!startDate || !endDate) {\n      return;\n    }\n\n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/daily-logs`, {\n        params: {\n          startDate: startDate.toISOString(),\n          endDate: endDate.toISOString(),\n        },\n      });\n      setDailyLogs(response.data);\n    } catch (error) {\n      console.error('Error fetching logs with date range:', error);\n    }\n  }, [startDate, endDate]);\n\n  useEffect(() => {\n    handleDateChange();\n  }, [startDate, endDate, handleDateChange]);\n\n  const handleSearchChange = (event) => {\n    setSearchQuery(event.target.value);\n  };\n\n  const filteredLogs = dailyLogs.filter(log =>\n    log.agentName.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  const groupedData = filteredLogs.reduce((acc, log) => {\n    const date = new Date(log.date).toLocaleDateString();\n    if (!acc[log.agentName]) {\n      acc[log.agentName] = { dates: [], totals: [] };\n    }\n    acc[log.agentName].dates.push(date);\n    acc[log.agentName].totals.push(log.total);\n    return acc;\n  }, {});\n\n  const colors = [\n    'rgba(75, 192, 192, 0.6)',\n    'rgba(255, 99, 132, 0.6)',\n    'rgba(54, 162, 235, 0.6)',\n    'rgba(255, 206, 86, 0.6)',\n    'rgba(75, 192, 192, 1)',\n  ];\n\n  const data = {\n    labels: [...new Set(filteredLogs.map(log => new Date(log.date).toLocaleDateString()))].reverse(),\n    datasets: Object.entries(groupedData).map(([agentName, { dates, totals }], index) => ({\n      label: agentName,\n      data: totals.reverse(),\n      backgroundColor: colors[index % colors.length],\n      borderColor: colors[index % colors.length].replace('0.6', '1'),\n      borderWidth: 1,\n      fill: false,\n    })),\n  };\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <div className=\"main-container\">\n        <h1 className=\"heading\">Daily Log</h1>\n        {loading ? (\n          <div className=\"loading-indicator\">Loading...</div>\n        ) : (\n          <>\n            <div className=\"button-container\">\n              <button\n                onClick={openModal}\n                className=\"clear-button\"\n              >\n                Clear Daily Logs\n              </button>\n              <CSVLink\n                data={filteredLogs.map(log => ({\n                  date: new Date(log.date).toLocaleDateString(),\n                  agentName: log.agentName,\n                  ...log.smartListCounts,\n                  total: log.total,\n                }))}\n                filename=\"daily_logs.csv\"\n                className=\"csv-button\"\n              >\n                Export CSV\n              </CSVLink>\n            </div>\n            <div className=\"date-picker-container\">\n              <div className=\"date-picker-label\">\n                <label>Start Date: </label>\n                <DatePicker\n                  selected={startDate}\n                  onChange={date => setStartDate(date)}\n                  selectsStart\n                  startDate={startDate}\n                  endDate={endDate}\n                  isClearable\n                  className=\"date-picker\"\n                  placeholderText=\"Select start date\"\n                />\n              </div>\n              <div className=\"date-picker-label\">\n                <label>End Date: </label>\n                <DatePicker\n                  selected={endDate}\n                  onChange={date => setEndDate(date)}\n                  selectsEnd\n                  startDate={startDate}\n                  endDate={endDate}\n                  minDate={startDate}\n                  isClearable\n                  className=\"date-picker\"\n                  placeholderText=\"Select end date\"\n                />\n              </div>\n            </div>\n            <input\n              type=\"text\"\n              placeholder=\"Search agents...\"\n              value={searchQuery}\n              onChange={handleSearchChange}\n              className=\"search-input p-2 border border-gray-300 rounded mb-4 w-full\"\n            />\n            <div className=\"chart-container\">\n              <Line data={data} options={{ maintainAspectRatio: false }} height={400} />\n            </div>\n            <div className=\"table-container\">\n              <table className=\"table\">\n                <thead>\n                  <tr>\n                    {columns.map((column) => (\n                      <DraggableColumn\n                        key={column.id}\n                        id={column.id}\n                        moveColumn={moveColumn}\n                        findColumn={findColumn}\n                        frozen={['date', 'agentName', 'total'].includes(column.id)}\n                      >\n                        {column.label}\n                      </DraggableColumn>\n                    ))}\n                  </tr>\n                </thead>\n                <tbody>\n                  {filteredLogs.map(log => (\n                    <tr key={log._id} className=\"border-b border-gray-200 hover:bg-gray-100 transition duration-300\">\n                      {columns.map((column) => (\n                        <td key={`${log._id}-${column.id}`} className=\"py-4 px-6 text-center text-sm\">\n                          {column.id === 'date'\n                            ? new Date(log.date).toLocaleDateString()\n                            : column.id === 'agentName'\n                              ? log.agentName\n                              : column.id === 'total'\n                                ? log.total\n                                : log.smartListCounts[column.id]}\n                        </td>\n                      ))}\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </>\n        )}\n        <Modal\n          isOpen={modalIsOpen}\n          onRequestClose={closeModal}\n          className=\"modal-content\"\n          overlayClassName=\"modal-overlay\"\n        >\n          <h2 className=\"modal-header\">Confirm Clear Logs</h2>\n          <p>Are you sure you want to clear the daily logs? This action cannot be undone.</p>\n          <div className=\"modal-buttons\">\n            <button\n              onClick={closeModal}\n              className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded-lg hover:bg-gray-400 transition duration-300\"\n            >\n              Cancel\n            </button>\n            <button\n              onClick={handleClearLogs}\n              className=\"px-4 py-2 bg-red-500 text-white rounded-lg hover:bg-red-600 transition duration-300\"\n            >\n              Clear Logs\n            </button>\n          </div>\n        </Modal>\n      </div>\n    </DndProvider>\n  );\n};\n\nexport default DailyLogTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}